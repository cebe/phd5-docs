%% https://knsv.github.io/mermaid/#flowcharts-basic-syntax

graph LR

  start((Start))

  cd_tests
  cd_root{project root directory}

  browser>browser]
  VNC-Viewer.app>VNC-Viewer.app]
  maintainer>ask maintainer]

  docker_push
  registry((registry))
  public_registry((DockerHub))



  subgraph Make
    make_latest
    make_all["make all"]
    make_build["make build"]
    make_up
    make_setup
    make_open
    make_bash["make bash"]
    make_clean
    make_open-db
    subgraph Development
      composer_update
      composer_require
      make_init
      make_lint
    end
    subgraph Testing
      make_run-tests
      make_open-vnc
    end
  end



  subgraph CI
    CI-BUILD
    CI-TEST
    CI-TEST-OK?{Test OK?}
    CI-RELEASE
    CI-DEPLOY
  end

  subgraph Source Code
    .env
    composer.lock
    composer.json
    src
    web
    vendor
    Dockerfile
  end

  subgraph output
    ./runtime/mysql
    _lint
    _reports
  end

  subgraph Services
    php_container[php/web container]
    worker_container
    database_container
    cache_container
    selenium_container
  end

  subgraph Container Commands
    $codecept
    $yii
    $yii_db/x-dump-data
    $yii_giiant-batch
    $linkchecker
  end

  subgraph Images
    dmstr/roj((dmstr/roj))
    php((library/php))
    percona((Percona DB))
    dmstr/php-yii2((dmstr/php-yii2))
    dmstr/phd5-app((phd5-ce))
    hrzg/phd5-ee-app((phd5-ee))
    schmunk42/gitlab-runner((gitlab-runner))
    namespace/app((Docker Image))
    jolicode/phaudit((jolicode/phaudit))
    selenium/firefox
  end

  subgraph Deployments
    deployment-staging
    deployment-production
  end

  subgraph DevOps
    docker-compose_run_roj -.-> roj_container
    roj_container --> $roj:bash
  end

  deployment((Deployment))

  start --> download-release
  start --> fork-repo
  start --> git-pull
  update-env --> cd_root
  download-release --> update-env
  fork-repo --> update-env{update-env}
  git-pull --> check-env{check-env}
  check-env --> cd_root

  %%cd_root --> Dockerfile
  cd_root -.- git_push
  cd_root -.- cd_tests
  cd_root ==> make_all
  cd_root ==> make_latest

  CI-BUILD -.-> make_build
  CI-TEST -.-> make_lint
  CI-RELEASE -.-> docker_push
  CI-DEPLOY -.-> roj-redeploy
  CI-DEPLOY ==> deployment((Deployment))
  CI-BUILD === CI-TEST
  CI-TEST === CI-TEST-OK?
  CI-TEST-OK? === CI-RELEASE
  CI-RELEASE ==> CI-DEPLOY
  CI-TEST -.-> make_run-tests
  _lint --> CI-TEST-OK?
  _reports --> CI-TEST-OK?

  CI-RELEASE --> tagged_image
  CI-RELEASE --> latest_image



  schmunk42/gitlab-runner -.-> CI-BUILD
  jolicode/phaudit -.- make_lint

  %% Dockerfile -.- vendor
  %% Dockerfile -.- src
  %% Dockerfile -.- web
  %% Dockerfile -.- composer.lock
  composer.json --- composer.lock
  composer_update --> composer.lock
  composer_require --> composer.lock
  composer.lock --> vendor

  php --> dmstr/php-yii2
  dmstr/php-yii2 -.- dmstr/phd5-app
  dmstr/php-yii2 -.- hrzg/phd5-ee-app
  dmstr/php-yii2 -.- namespace/app
  dmstr/phd5-app -. planck .-> namespace/app
  hrzg/phd5-ee-app -. curie .-> namespace/app

  click php "http://www.github.com" "This is a tooltip for a link"

  %% error -.- CI-TEST
  cd_tests(cd_tests)


  make_init ==> make_build
  make_lint --> _lint
  Dockerfile --- make_build
  make_open --> browser
  make_setup ==> make_open
  make_setup --> database_container
  make_clean --> make_all
  make_bash -- docker-compose run --> php_container
  make_latest == create_new_latest ==> CI-BUILD

  cd_tests -.-> make_all
  make_all -.-> make_build
  make_setup -.-> make_run-tests
  cd_tests --> host-volumes{host-volumes}

  git_push -.-> CI-BUILD

  %% make_latest --- CI-RELEASE
  make_all === make_init
  %%make_init --> .env
  make_build ==> make_up
  make_build -- docker build --> namespace/app
  make_up ==> make_setup
  make_open-vnc -.-> VNC-Viewer.app
  make_open-db -.- database_container
  make_run-tests -- $codecept --> php_container

  browser -.- php_container
  php_container --> $yii($yii)
  php_container --> $codecept($codecept)
  php_container --> $linkchecker($linkchecker)
  php_container --> $yii_giiant-batch($giiant-batch)
  namespace/app -.- php_container
  percona -.- database_container
  selenium/firefox -.- selenium_container

  docker_push ==> registry

  VNC-Viewer.app --> selenium_container
  $codecept --> _reports
  $yii_giiant-batch --> src

  dmstr/roj -.- roj_container
  $roj:bash --> roj-redeploy
  roj-redeploy --> deployment-staging
  roj-redeploy --> deployment-production

  namespace/app --- docker_push

  initial_setup --> deployment-staging

  error --> make_clean
  error -- read --- troubleshooting.md
  error -- ask --> maintainer


  $yii_db/x-dump-data --> ./runtime/mysql

  %% Styles
   style namespace/app fill:#f9f,stroke:#333,stroke-width:4px;
   classDef default fill:#c00,stroke:#333,stroke-width:4px;
   classDef gray fill:#ccc,stroke:#333,stroke-width:4px;
   classDef green fill:#9f6,stroke:#333,stroke-width:2px;
   classDef orange fill:#f96,stroke:#333,stroke-width:4px;
   classDef yellow fill:#ff0,stroke:#333,stroke-width:2px;
   classDef cyan fill:#1dd,stroke:#ccc,stroke-width:4px;
   class make_build,namespace/app gray
   class start,make_all,make_open green
   class make_latest,deployment-staging,deployment-production orange
   class make_run-tests,$codecept,make_open-vnc,selenium/firefox,jolicode/phaudit yellow
   class roj_container,php_container,selenium_container,database_container cyan
